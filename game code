import pygame
import random
import math

# initializing the game
pygame.init()

# creating the game
screen = pygame.display.set_mode((1000, 800))

# title and logo
pygame.display.set_caption("Space Invaders")
icon = pygame.image.load('player1.png')
pygame.display.set_icon(icon)

# player
playerimg = pygame.image.load('space-ship.png')
playerX = 450
playerY = 670
playerX_change = 0
playerY_change = 0

# score
score = 0
font = pygame.font.Font('freesansbold.ttf', 32)
textX = 10
textY = 10


def show_score(x, y):
    score_value = font.render("score:" + str(score), True, (255, 255, 255))
    screen.blit(score_value, (x, y))


# game over text
game_over_font = pygame.font.Font('freesansbold.ttf', 64)


def game_over_text():
    over_text = font.render("GAME OVER", True, (255, 255, 255))
    screen.blit(over_text, (1005, 405))


def player(x, y):
    screen.blit(playerimg, (x, y))


# enemy
# for multiple enimies
enemyimg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 5

for i in range(num_of_enemies):
    enemyimg.append(pygame.image.load("enemy.png"))
    enemyX.append(random.randint(3, 935))
    enemyY.append(random.randint(50, 200))
    enemyX_change.append(1.3)
    enemyY_change.append(40)


def enemy(x, y, i):
    screen.blit(enemyimg[i], (x, y))


# BG
BG = pygame.image.load("BG _X.png")

# bullet
bulletimg = pygame.image.load("bullet.png")
bulletX = 0
bulletY = 670
bulletX_change = 0
bulletY_change = 3
bullet_state = "ready"


def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletimg, (x + 16, y + 16))


def iscollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY - bulletY, 2)))
    if distance < 27:
        return True
    else:
        return False


# game loop
running = True
while running:
    # adding colours as RGB-red,blue,green
    screen.fill((128, 128, 0))  # this is olive colour

    # background
    screen.blit(BG, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        # checking key pressed is left or right
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                # print("left key is pressed")
                playerX_change = -3
            if event.key == pygame.K_RIGHT:
                # print("right key is pressed")
                playerX_change = 3
            # if event.key == pygame.K_UP:
            #     print("up key pressed")
            #     playerY_change = -1
            # if event.key == pygame.K_DOWN:
            #     print("down key pressed")
            #     playerY_change = 1
            if event.key == pygame.K_SPACE:
                if bullet_state == "ready":
                    bulletX = playerX
                    fire_bullet(bulletX, playerY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:  # or event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                # print("key is released")
                playerX_change = 0
            #    playerY_change = 0

    playerX += playerX_change
    # playerY += playerY_change
    if playerX <= 0:
        playerX = 0
    if playerX >= 936:
        playerX = 936
    # if playerY <= 0:
    #    playerY = 0
    # if playerY >= 736:
    #     playerY = 736

    # movement of multiple enemies
    for i in range(num_of_enemies):
        enemyX[i] += enemyX_change[i]
    if enemyX[i] <= 0:
        enemyX_change[i] = 1.3
        enemyY[i] += enemyY_change[i]
    elif enemyX[i] >= 936:
        enemyX_change[i] = -1.3
        enemyY[i] += enemyY_change[i]

    # collision
    collision = iscollision(enemyX[i], enemyY[i], bulletX, bulletY)
    if collision:
        bulletY = 670
        bullet_state = "ready"
        score += 10
        # print(score)
        enemyX[i] = random.randint(3, 935)
        enemyY[i] = random.randint(50, 200)
    enemy(enemyX[i], enemyY[i], i)

    if bulletY <= 0:
        bulletY = 670
        bullet_state = "ready"

    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change

player(playerX, playerY)
show_score(textX, textY)
pygame.display.update()
